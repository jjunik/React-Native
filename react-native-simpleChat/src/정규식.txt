대괄호 : 고라호 안의 하나의 문자와 일치
[abc] : a 또는 b 또는 c 중 하나와 일치
[a-z] : 소문자 a - z 중 하나
[A-Z] : 대문자 A - Z 중 하나
[0-9] : 숫자중 하나와 일치
[a-z-A-Z0-9] : 알파벳 대소문자 ,숫자 중 하나와 일치
[^abc] : abc가 아닌 문자
. : 모든 문자 하나와 일치
\d : [0-9]
\D : [^0-9]
\w : [A-Za-z_]
\W : [^A-Za-z_]
\s : 공백문자
\S : 공백이 아닌 문자

반복

* : 앞의 패턴이 0번이상 반복
ex) a* : a가 없거나 여러번 반복되는 경우와 일치

+ : 앞의 패턴이 1번이상 반복
ex) a+ : a가 한번 이상 나타나는 경우와 일치

? : 앞의 패턴이 0번 또는 1번 나타나는 경우와 일치
ex) a? : a가 없거나 1번 나타나는 경우와 일치

{n} : 정확히 n번 반복
ex) a{3} : a가 정확히 3번 나오는 경우와 일치

{n,} : 최소 n번 반복
ex) a{2,} a가 최소 두 번 나타나는 경우와 일치

{n,m} : n번에서 m번 사이 반복
ex) a{1,3} : a가 1번 이상 3번 이하로 나타나는 경우와 일치

채널 생성 화면 생성된 채널을 파이어베이스로 관리하기
서버를 구축하지 않았기 때문에 채널 데이터를 관리하기 위해 파이어베이스의 데이터베이스를 활용해보자

NoSQL
문서 중심의 데이터베이스
테이블이나 행이 없고 컬렉션, 문서, 필드로 구성된다
컬렉션(TABLE): 문서의 컨테이너 역할, 모든 문서는 항상 컬렉션에 저장되어야 한다
문서(ROW): 데이터를 키-값 쌍이나 계층적 구조로 저장한 단위 행(ROW)
필드: 문서 내에서 데이터를 정의하는 개별 속성 열(COLUM)

파이어스토어의 특징
데이터베이스가 수정되면 실시간으로 반영

컬렉션과 문서는 항상 유일한 ID를 갖고 있어야 하는 규칙이 있다.
여기서는 channels라는 ID를 가진 하나의 컬렉션을 만들고 생성되는 채널들은 
channels 컬렉션에 문서로 저장해보자.



채널이름을 입력하는 Input
label: Title
완료 누르면 설명을 입력하는 칸을 ㅗ포커스 이동
제목이 비어있으면  Please enter the title 에러 메세지 띄우기
포커스를 잃어도 적은 내용을 다 반영하기


설명을 입력하는 Input
label: Description
완료버튼 누르면 채널이 만들어지는 _handleCreateButtonPress() 함수호출
함수는 이렇게 () => {}

에러 텍스트
버튼

채팅화면
각 채널 문서에 message컬렉션을 만들면 메시지 데이터를 관리할 수 있다
채널별로 발생한 메시지를 모아서 관리하면 채널에서 주고받는 메시지를 편하게
저장하고 불러올 수 있다.

