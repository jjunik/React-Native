{key:value}

Object.values(tasks) : 객체의 값들로 이루어진 배열을 반환
reverse(): 위에서 얻은 배열을 역순으로 정렬
.map(item => (<Task key = {item.id} text={item.text}/>))
역순으로 정렬된 배열의 각 항목에 대해 Task 컴포넌트를 생성

key={item.id} : Task 컴포넌트에 고유한 식별자를 설정해주는 역할
React는 key가 없으면 요소가 변경될 때 어떤 컴포넌트가 새로 추가된건지,
기존 컴포넌트가 변경된건지  구분하기 어려워지고 
불필요하게 많은 컴포넌트를 렌더링하게 될 수 있다

스프레드 연산자(...)
배열이나 객체를 펼쳐서(전개해서) 개별요소나 속성으로 분해하는 문법
주로 배열이나 객체를 복사하거나 병합할 때 사용\

Object.assign( target, ...source);
- 자바스크립트에서 객체의 속성을 다른 객체에 복사 할 때 사용하는 함수

target: 속성을 복사할 대상 객체
source: 속성을 복사할 하나 이상의 원본 객체들

데이터 저장하기
-AsyncStorage 를 이용해 로컬에 데이터를 저장하고 불러오는 기능을 구현할 수 있다
비동기로 동작하며 문자열로 된 키 값 형태의 데이터를 기기에 저장하고 불러올 수 있는 기능이 있다.

AsyncStorage에 리액트 네이티브의 간단한 데이터를 저장
setItem(key,value) 

데이터 불러오기
AppLoading 컴포넌트를 사용해서 특정 조건에서 로딩화면이 유지되록 할 수 있다.

첫 화면이 렌더링 되기 전에 _loadTask 함수가 호출되도록 해보자